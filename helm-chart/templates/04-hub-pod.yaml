apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: kubeshark-hub
    kubeshark-created-by: kubeshark
    kubeshark-managed-by: kubeshark
  name: '{{ .Values.tap.selfnamespace }}'
  namespace: kubeshark
spec:
  containers:
    - command:
        - '{{ .Values.tap.debug | ternary "./hub -debug" "./hub" }}'
      env:
        - name: POD_REGEX
          value: '{{ .Values.tap.regex }}'
        - name: NAMESPACES
          value: '{{ .Values.tap.allnamespaces | ternary "" .Values.tap.namespaces | quote }}'
        - name: STORAGE_LIMIT
          value: '{{ .Values.tap.storagelimit }}'
        - name: LICENSE
          value: '{{ .Values.license }}'
      image: '{{ .Values.tap.docker.registry }}/hub:{{ .Values.tap.docker.tag }}'
      imagePullPolicy: '{{ .Values.tap.docker.imagePullPolicy }}'
      name: kubeshark-hub
      resources:
        limits:
          cpu: '{{ .Values.tap.resources.hub.limits.cpu }}'
          memory: '{{ .Values.tap.resources.hub.limits.memory }}'
        requests:
          cpu: '{{ .Values.tap.resources.hub.requests.cpu }}'
          memory: '{{ .Values.tap.resources.hub.requests.memory }}'
  dnsPolicy: ClusterFirstWithHostNet
  imagePullSecrets: '{{ .Values.tap.docker.imagepullsecrets }}'
  serviceAccountName: kubeshark-service-account
  terminationGracePeriodSeconds: 0
  tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
status: {}
